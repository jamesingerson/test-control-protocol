{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Test Control Protocol",
	"patterns": [
		{
			"include": "#invalid"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#title-lines"
		},
		{
			"include": "#hex-lines"
		},
		{
			"include": "#number-lines"
		},
		{
			"include": "#alpha-lines"
		},
		{
			"include": "#goto-lines"
		},
		{
			"include": "#gotcp-lines"
		},
		{
			"include": "#get-lines"
		},
		{
			"include": "#instruction-lines"
		}
	],
	"repository": {
		"invalid": {
			"patterns": [
				{
					"name": "invalid.too-long.testcontrolprotocol",
					"match": "^.{81}.*\n"
				},
				{
					"name": "invalid.illegal-character.testcontrolprotocol",
					"match": "^.{6}[^\\s].*\n"
				}
			]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.testcontrolprotocol",
				"match": "^.{7}\\K\\*.*\n"
			}]
		},
		"title-lines": {
			"patterns": [{
				"name": "support.type.testcontrolprotocol",
				"match": "^.{7}\\K[TDQ].*\n"
			}]
		},
		"hex-lines": {
			"captures": {
				"2": {
					"name": "variable.parameter.testcontrolprotocol"
				},
				"3": {
					"name": "entity.name.function.testcontrolprotocol"
				},
				"4": {
					"name": "string.control.testcontrolprotocol"
				},
				"5": {
					"name": "invalid.testcontrolprotocol"
				}
			},
			"match": "(^.{7})(\\bH\\b\\s)(.{1,8}\\s)?(.{1,61})(.*)",
			"name": "hex-line.testcontrolprotocol"
		},
		"number-lines": {
			"captures": {
				"2": {
					"name": "variable.parameter.testcontrolprotocol"
				},
				"3": {
					"name": "storage.testcontrolprotocol"
				},
				"4": {
					"name": "string.testcontrolprotocol"
				},
				"5": {
					"name": "string.testcontrolprotocol"
				},
				"6": {
					"name": "string.testcontrolprotocol"
				},
				"7": {
					"name": "string.testcontrolprotocol"
				},
				"8": {
					"name": "invalid.testcontrolprotocol"
				}
			},
			"match": "(^.{7})(\\b[NRS]\\b\\s)(.{8}\\s*)([+-.]?\\d*[+-.]?\\d*\\s+)([+-.]?\\d*[+-.]?\\d*\\s+)?([+-.]?\\d*[+-.]?\\d*\\s+)([+-.]?\\d*[+-.]?\\d*\\s+)?(.*)",
			"name": "number-line.testcontrolprotocol"
		},
		"alpha-lines": {
			"captures": {
				"2": {
					"name": "variable.parameter.testcontrolprotocol"
				},
				"3": {
					"name": "storage.testcontrolprotocol"
				},
				"4": {
					"name": "string.testcontrolprotocol"
				},
				"5": {
					"name": "invalid.testcontrolprotocol"
				}
			},
			"match": "(^.{7})(\\b[AM]\\b\\s)(.{1,8}\\s)(.{1,61})(.*)",
			"name": "alpha-line.testcontrolprotocol"
		},
		"goto-lines": {
			"captures": {
				"2": {
					"name": "variable.parameter.testcontrolprotocol"
				},
				"3": {
					"name": "entity.name.function.testcontrolprotocol"
				},
				"4": {
					"name": "keyword.control.testcontrolprotocol"
				},
				"5": {
					"name": "entity.name.function.testcontrolprotocol"
				},
				"6": {
					"name": "string.testcontrolprotocol"
				},
				"7": {
					"name": "string.testcontrolprotocol"
				},
				"8": {
					"name": "invalid.testcontrolprotocol"
				}
			},
			"match": "(^.{7})(\\bI\\b\\s)(.{1,8}\\s)(\\bGOTO.{1,4}|GOSUB.{1,3}\\s)(.{1,8}\\s)?(.{1,8}\\s)?(.{1,8})?",
			"name": "instruction-line.testcontrolprotocol"
		}, 
		"gotcp-lines": {
			"captures": {
				"2": {
					"name": "variable.parameter.testcontrolprotocol"
				},
				"3": {
					"name": "entity.name.function.testcontrolprotocol"
				},
				"4": {
					"name": "keyword.control.testcontrolprotocol"
				},
				"5": {
					"name": "support.type.testcontrolprotocol"
				},
				"6": {
					"name": "string.testcontrolprotocol"
				},
				"7": {
					"name": "string.testcontrolprotocol"
				},
				"8": {
					"name": "invalid.testcontrolprotocol"
				}
			},
			"match": "(^.{7})(\\bI\\b\\s)(.{1,8}\\s)(\\bGOTCP.{1,3}\\s)(.{1,8}\\s)?(.{1,8}\\s)?(.{1,8})?",
			"name": "instruction-line.testcontrolprotocol"
		}, 
		"get-lines": {
			"captures": {
				"2": {
					"name": "variable.parameter.testcontrolprotocol"
				},
				"3": {
					"name": "entity.name.function.testcontrolprotocol"
				},
				"4": {
					"name": "keyword.control.testcontrolprotocol"
				},
				"5": {
					"name": "entity.name.function.testcontrolprotocol"
				},
				"6": {
					"name": "string.testcontrolprotocol"
				},
				"7": {
					"name": "string.testcontrolprotocol"
				},
				"8": {
					"name": "invalid.testcontrolprotocol"
				}
			},
			"match": "(^.{7})(\\bI\\b\\s)(.{1,8}\\s)(\\bGET.{1,4}\\s)(.{1,8}\\s)?(.{1,8}\\s)?(.{1,8})?",
			"name": "instruction-line.testcontrolprotocol"
		},
		"instruction-lines": {
			"captures": {
				"2": {
					"name": "variable.parameter.testcontrolprotocol"
				},
				"3": {
					"name": "entity.name.function.testcontrolprotocol"
				},
				"4": {
					"name": "keyword.control.testcontrolprotocol"
				},
				"5": {
					"name": "string.testcontrolprotocol"
				},
				"6": {
					"name": "string.testcontrolprotocol"
				},
				"7": {
					"name": "string.testcontrolprotocol"
				},
				"8": {
					"name": "invalid.testcontrolprotocol"
				}
			},
			"match": "(^.{7})(\\bI\\b\\s)(.{1,8}\\s)?(.{1,8}\\s)?(.{1,8}\\s)?(.{1,8}\\s)?(.{1,8})?",
			"name": "instruction-line.testcontrolprotocol"
		}
	},
	"scopeName": "source.testcontrolprotocol"
}